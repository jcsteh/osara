# OSARA: Open Source Accessibility for the REAPER Application
# SConstruct
# Author: James Teh <jamie@jantrid.net>
# Copyright 2015-2017 NV Access Limited, James Teh
# License: GNU General Public License version 2.0

import os

vars = Variables()
vars.Add("version", "The version of this build", "unknown")
vars.Add("publisher", "The publisher of this build", "unknown")
env = Environment(tools = ["default", "textfile"],
	variables=vars,
	copyright="Copyright (C) 2014-2020 NV Access Limited, James Teh & other contributors",
)

if env["PLATFORM"] == "win32":
	for arch, suffix in (("x86", "32"), ("x86_64", "64")):
		archEnv = Environment(tools = ["default", "textfile"],
			TARGET_ARCH=arch, libSuffix=suffix,
			version=env["version"], copyright=env["copyright"],
			# Hack around an odd bug where some tool after msvc states that static and shared objects are different.
			STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME=1)
		archEnv.SConscript("src/archBuild_sconscript",
			exports={"env": archEnv},
			variant_dir="build/%s" % arch, duplicate=False)

	try:
		import winreg
	except ImportError:
		import _winreg as winreg
	# Get the path to makensis.
	try:
		with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\NSIS",
				0, winreg.KEY_READ | winreg.KEY_WOW64_32KEY) as nsisKey:
			makensis = os.path.join(winreg.QueryValueEx(nsisKey, None)[0], "makensis.exe")
	except WindowsError:
		makensis = "makensis"
	installer = env.Command("installer/osara_${version}.exe", ["installer/osara.nsi", "build"],
		[[makensis, "/V2",
		"/DVERSION=$version", '/DPUBLISHER="$publisher"','/DCOPYRIGHT="$copyright"',
		"/DOUTFILE=${TARGET.abspath}",
		"$SOURCE"]])

else: # Mac
	env["libSuffix"] = ""
	env.SConscript("src/archBuild_sconscript",
		exports={"env": env},
		variant_dir="build", duplicate=False)
	installer = env.Command("installer/osara_${version}.dmg", ["installer/mac/build.sh", "build"],
		[["$SOURCE", "$version"]])

	env.Alias("installer", installer)
	env.Default(installer)
