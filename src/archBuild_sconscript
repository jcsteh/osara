# OSARA: Open Source Accessibility for the REAPER Application
# SConscript for architecture-specific building of the source
# Author: James Teh <jamie@jantrid.net>
# Copyright 2015-2017 NV Access Limited, James Teh
# License: GNU General Public License version 2.0

Import("env")
env.Append(CPPPATH=("#include", "#include/WDL"))

sources = [
	"reaper_osara.cpp",
	"paramsUi.cpp",
	"peakWatcher.cpp",
	"midiEditorCommands.cpp",
	"envelopeCommands.cpp",
	"controlSurface.cpp",
	"exports.cpp",
]

if env["PLATFORM"] == "win32":
	env.Append(CXXFLAGS="/EHsc /std:c++latest /W3 /WX")
	# We always want debug symbols.
	env.Append(PDB="${TARGET}.pdb")
	# having symbols usually turns this off, but we have no need for unused symbols.
	env.Append(LINKFLAGS='/OPT:REF')
	sources.extend((
		env.Object("win32_utf8.obj", "#include/WDL/WDL/win32_utf8.c"),
		env.RES("reaper_osara.rc"),
	))
	libs = [
		"user32",
		"ole32",
		"oleacc",
		"OleAut32",
		"Shell32",
		"Comdlg32",
		"Advapi32",
	]

else: # Mac
	swellDir = env.Dir("#include/WDL/WDL/swell")
	env.Append(CPPPATH=(swellDir,))
	env["CXX"] = "clang++"
	coreFlags = "-mmacosx-version-min=10.7 -stdlib=libc++"
	cxxFlags = coreFlags + " -std=c++17 -Werror"
	env.Append(CXXFLAGS=cxxFlags)
	env.Append(LINKFLAGS=coreFlags)
	# SWELL files.
	sources.extend(
		# Disable warnings for SWELL, since we don't have any control over those.
		env.SharedObject(swellDir.File(f), CXXFLAGS=cxxFlags + " -Wno-everything")
		for f in (
			"swell.cpp", "swell-ini.cpp", "swell-dlg.mm", "swell-gdi.mm",
			"swell-kb.mm", "swell-misc.mm", "swell-miscdlg.mm", "swell-menu.mm",
			"swell-wnd.mm", "swell-modstub.mm",
	))
	sources.append("osxa11y.mm")
	libs = []
	# OS X frameworks.
	for f in ("Cocoa", "Carbon", "Appkit"):
		env.Append(LINKFLAGS=("-framework", f))
	# We don't want the "lib" prefix for our dylib.
	env["SHLIBPREFIX"] = ""

	# Generate Mac resources.
	res = env.Command(["reaper_osara.rc_mac_dlg", "reaper_osara.rc_mac_menu"], "reaper_osara.rc",
		[["include/WDL/WDL/swell/mac_resgen.php", "$SOURCE"]])
	env.Depends("reaper_osara.cpp", res)

env.SharedLibrary(
	target="reaper_osara%s" % env["libSuffix"],
	source=sources, LIBS=libs,
)
